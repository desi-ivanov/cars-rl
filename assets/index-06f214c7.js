var A=Object.defineProperty;var L=(x,p,y)=>p in x?A(x,p,{enumerable:!0,configurable:!0,writable:!0,value:y}):x[p]=y;var s=(x,p,y)=>(L(x,typeof p!="symbol"?p+"":p,y),y);(function(){const p=document.createElement("link").relList;if(p&&p.supports&&p.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))t(e);new MutationObserver(e=>{for(const i of e)if(i.type==="childList")for(const n of i.addedNodes)n.tagName==="LINK"&&n.rel==="modulepreload"&&t(n)}).observe(document,{childList:!0,subtree:!0});function y(e){const i={};return e.integrity&&(i.integrity=e.integrity),e.referrerpolicy&&(i.referrerPolicy=e.referrerpolicy),e.crossorigin==="use-credentials"?i.credentials="include":e.crossorigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function t(e){if(e.ep)return;e.ep=!0;const i=y(e);fetch(e.href,i)}})();class I{constructor(p=70,y=100,t=Math.PI/50,e={x:100,y:120},i={x:1,y:0},n=0,a=[{angle:-Math.PI/3,size:p},{angle:0,size:p*1.5},{angle:Math.PI/3,size:p}],d=20,h=10){s(this,"sensorsLines",()=>this.sensors.map(p=>({p1:this.center,p2:{x:this.center.x+p.size*Math.cos(p.angle+Math.atan2(this.direction.y,this.direction.x)),y:this.center.y+p.size*Math.sin(p.angle+Math.atan2(this.direction.y,this.direction.x))}})));s(this,"shapeLines",()=>[{p1:{x:-this.width/2,y:-this.height/2},p2:{x:this.width/2,y:-this.height/2}},{p1:{x:this.width/2,y:-this.height/2},p2:{x:this.width/2,y:this.height/2}},{p1:{x:this.width/2,y:this.height/2},p2:{x:-this.width/2,y:this.height/2}},{p1:{x:-this.width/2,y:this.height/2},p2:{x:-this.width/2,y:-this.height/2}}].map(p=>({p1:{x:this.center.x+p.p1.x*Math.cos(Math.atan2(this.direction.y,this.direction.x))-p.p1.y*Math.sin(Math.atan2(this.direction.y,this.direction.x)),y:this.center.y+p.p1.x*Math.sin(Math.atan2(this.direction.y,this.direction.x))+p.p1.y*Math.cos(Math.atan2(this.direction.y,this.direction.x))},p2:{x:this.center.x+p.p2.x*Math.cos(Math.atan2(this.direction.y,this.direction.x))-p.p2.y*Math.sin(Math.atan2(this.direction.y,this.direction.x)),y:this.center.y+p.p2.x*Math.sin(Math.atan2(this.direction.y,this.direction.x))+p.p2.y*Math.cos(Math.atan2(this.direction.y,this.direction.x))}})));this.speed=y,this.steerAngle=t,this.center=e,this.direction=i,this.steering=n,this.sensors=a,this.width=d,this.height=h}update(p,y){this.steering=[-this.steerAngle,0,+this.steerAngle][y],this.direction.x=this.direction.x*Math.cos(this.steering)-this.direction.y*Math.sin(this.steering),this.direction.y=this.direction.x*Math.sin(this.steering)+this.direction.y*Math.cos(this.steering);const t=Math.sqrt(this.direction.x**2+this.direction.y**2);this.direction.x/=t,this.direction.y/=t,this.center.x+=this.direction.x*this.speed*p,this.center.y+=this.direction.y*this.speed*p}}const g=(x,p,y="#000")=>{x.beginPath(),x.moveTo(p.p1.x,p.p1.y),x.lineTo(p.p2.x,p.p2.y),x.strokeStyle=y,x.stroke()},T=x=>x!=null,l=(x,p)=>Math.sqrt((x.x-p.x)**2+(x.y-p.y)**2),m=(x,p)=>{const y=(x.p1.x-x.p2.x)*(p.p1.y-p.p2.y)-(x.p1.y-x.p2.y)*(p.p1.x-p.p2.x);if(y===0)return null;const t=((x.p1.x*x.p2.y-x.p1.y*x.p2.x)*(p.p1.x-p.p2.x)-(x.p1.x-x.p2.x)*(p.p1.x*p.p2.y-p.p1.y*p.p2.x))/y,e=((x.p1.x*x.p2.y-x.p1.y*x.p2.x)*(p.p1.y-p.p2.y)-(x.p1.y-x.p2.y)*(p.p1.x*p.p2.y-p.p1.y*p.p2.x))/y;return t<Math.min(x.p1.x,x.p2.x)||t>Math.max(x.p1.x,x.p2.x)||t<Math.min(p.p1.x,p.p2.x)||t>Math.max(p.p1.x,p.p2.x)||e<Math.min(x.p1.y,x.p2.y)||e>Math.max(x.p1.y,x.p2.y)||e<Math.min(p.p1.y,p.p2.y)||e>Math.max(p.p1.y,p.p2.y)?null:{x:t,y:e}};class C{constructor(p,y,t,e,i=80){s(this,"lastTime",performance.now());s(this,"car");s(this,"rewardsGrid",[]);s(this,"sensorIntersections",()=>this.car.sensorsLines().map(p=>this.world.walls.map(y=>m(p,y)).filter(T).reduce((y,t)=>y?l(this.car.center,t)<l(this.car.center,y)?t:y:t,null)));s(this,"sensorInputs",()=>this.sensorIntersections().map(p=>p===null?0:1-l(this.car.center,p)/this.sensorLength));s(this,"render",p=>{const y=p.getContext("2d");y&&(y.clearRect(0,0,this.world.width,this.world.height),this.world.walls.forEach(t=>g(y,t)),this.car.shapeLines().forEach(t=>g(y,t)))});s(this,"isColliding",()=>this.car.shapeLines().some(p=>this.world.walls.some(y=>m(p,y)!=null)));s(this,"state",()=>this.sensorInputs());s(this,"step",p=>{const y=performance.now(),t=Math.min(.01,(y-this.lastTime)/1e3);this.isColliding()||this.car.update(t,p),this.lastTime=y;const e=this.isColliding();let i=.01;const n=Math.floor(this.car.center.x/this.gridCellSize),a=Math.floor(this.car.center.y/this.gridCellSize);return this.rewardsGrid[a][n]||(this.rewardsGrid[a][n]=!0,i=1),{state:this.state(),reward:e?-10:i,done:e}});this.world=p,this.sensorLength=y,this.speed=t,this.steerAngle=e,this.gridCellSize=i,this.reset()}reset(){return this.car=new I(this.sensorLength,this.speed,this.steerAngle),this.rewardsGrid=Array.from({length:Math.ceil(this.world.width/this.gridCellSize)},()=>Array.from({length:Math.ceil(this.world.height/this.gridCellSize)},()=>!1)),this.state()}}class r{constructor(p,y=[],t=()=>{}){s(this,"grad");s(this,"add",p=>{const y=p instanceof r?p:new r(p),t=new r(this.value+y.value,[this,y],()=>{this.grad+=t.grad,y.grad+=t.grad});return t});s(this,"sub",p=>this.add((p instanceof r?p:new r(p)).neg()));s(this,"neg",()=>this.mul(-1));s(this,"abs",()=>{const p=new r(Math.abs(this.value),[this],()=>{this.grad+=(this.value>0?1:-1)*p.grad});return p});s(this,"mul",p=>{const y=p instanceof r?p:new r(p),t=new r(this.value*y.value,[this,y],()=>{this.grad+=y.value*t.grad,y.grad+=this.value*t.grad});return t});s(this,"pow",p=>{const y=new r(this.value**p,[this],()=>{this.grad+=p*this.value**(p-1)*y.grad});return y});s(this,"div",p=>this.mul((p instanceof r?p:new r(p)).pow(-1)));s(this,"sigmoid",()=>{const p=new r(1/(1+Math.exp(-this.value)),[this],()=>{this.grad+=p.grad*(p.value*(1-p.value))});return p});s(this,"getValue",()=>this.value);s(this,"setValue",p=>{this.value=p});s(this,"getGrad",()=>this.grad);s(this,"setGrad",p=>{this.grad=p});s(this,"backward",()=>{const p=[],y=new Set;function t(e){y.has(e)||(y.add(e),e.children.forEach(i=>t(i)),p.push(e))}t(this),p.reverse(),this.grad=1;for(const e of p)e.gradfn()});this.value=p,this.children=y,this.gradfn=t,this.grad=0}}class G{constructor(p,y){s(this,"w");s(this,"b");s(this,"parameters",()=>this.w.concat(this.b));s(this,"forward",p=>[E(p.map((y,t)=>y.mul(this.w[t]))).add(this.b)]);this.w=Array.from({length:p},()=>new r(y())),this.b=new r(y())}}class u{}s(u,"sample",(p=0,y=1)=>p+y*Math.sqrt(-2*Math.log(Math.random()))*Math.cos(2*Math.PI*Math.random()));class z{constructor(p,y,t=u.sample.bind(u)){s(this,"w");s(this,"b");s(this,"in_channels");s(this,"parameters",()=>this.w.flatMap(p=>p.parameters()));s(this,"forward",p=>this.w.map(y=>y.forward(p)[0]));this.in_channels=p,this.w=Array.from({length:y},()=>new G(p,t))}}class w{constructor(p,y=t=>t.sigmoid()){s(this,"layers");s(this,"forward",p=>this.layers.reduce((y,t)=>t.forward(y).map(this.act.bind(this)),p.map(y=>new r(y))));s(this,"parameters",()=>this.layers.flatMap(p=>p.parameters()));s(this,"zero_grad",()=>this.parameters().forEach(p=>p.setGrad(0)));this.act=y,this.layers=p.slice(1).map((t,e)=>new z(p[e],t))}}class N{constructor(p,y,t=.9,e=1e-8){s(this,"v");s(this,"step",()=>{this.parameters.forEach((p,y)=>{this.v[y]=this.beta*this.v[y]+(1-this.beta)*p.getGrad()**2,p.setValue(p.getValue()-this.learningRate*p.getGrad()/(this.v[y]**.5+this.epsilon))})});this.parameters=p,this.learningRate=y,this.beta=t,this.epsilon=e,this.v=this.parameters.map(i=>0)}}const E=x=>x.reduce((p,y)=>p.add(y)),R={width:800,height:800,walls:[{p1:{x:123,y:160},p2:{x:165,y:158}},{p1:{x:165,y:158},p2:{x:212,y:157}},{p1:{x:212,y:157},p2:{x:216,y:169}},{p1:{x:216,y:169},p2:{x:228,y:199}},{p1:{x:228,y:199},p2:{x:237,y:232}},{p1:{x:237,y:232},p2:{x:237,y:255}},{p1:{x:237,y:255},p2:{x:232,y:266}},{p1:{x:232,y:266},p2:{x:222,y:271}},{p1:{x:222,y:271},p2:{x:177,y:271}},{p1:{x:177,y:271},p2:{x:161,y:271}},{p1:{x:161,y:271},p2:{x:137,y:275}},{p1:{x:137,y:275},p2:{x:119,y:297}},{p1:{x:119,y:297},p2:{x:108,y:321}},{p1:{x:108,y:321},p2:{x:103,y:359}},{p1:{x:103,y:359},p2:{x:110,y:382}},{p1:{x:110,y:382},p2:{x:123,y:402}},{p1:{x:123,y:402},p2:{x:133,y:414}},{p1:{x:133,y:414},p2:{x:150,y:419}},{p1:{x:150,y:419},p2:{x:164,y:427}},{p1:{x:164,y:427},p2:{x:201,y:441}},{p1:{x:201,y:441},p2:{x:224,y:446}},{p1:{x:224,y:446},p2:{x:300,y:453}},{p1:{x:300,y:453},p2:{x:317,y:440}},{p1:{x:317,y:440},p2:{x:333,y:406}},{p1:{x:333,y:406},p2:{x:330,y:364}},{p1:{x:330,y:364},p2:{x:332,y:321}},{p1:{x:332,y:321},p2:{x:336,y:281}},{p1:{x:336,y:281},p2:{x:340,y:241}},{p1:{x:340,y:241},p2:{x:345,y:230}},{p1:{x:345,y:230},p2:{x:372,y:207}},{p1:{x:372,y:207},p2:{x:381,y:213}},{p1:{x:381,y:213},p2:{x:394,y:241}},{p1:{x:394,y:241},p2:{x:396,y:289}},{p1:{x:396,y:289},p2:{x:395,y:302}},{p1:{x:395,y:302},p2:{x:390,y:312}},{p1:{x:390,y:312},p2:{x:385,y:323}},{p1:{x:385,y:323},p2:{x:386,y:344}},{p1:{x:386,y:344},p2:{x:403,y:370}},{p1:{x:403,y:370},p2:{x:426,y:370}},{p1:{x:426,y:370},p2:{x:456,y:370}},{p1:{x:456,y:370},p2:{x:484,y:352}},{p1:{x:484,y:352},p2:{x:493,y:331}},{p1:{x:493,y:331},p2:{x:500,y:301}},{p1:{x:500,y:301},p2:{x:508,y:265}},{p1:{x:508,y:265},p2:{x:540,y:245}},{p1:{x:540,y:245},p2:{x:583,y:242}},{p1:{x:583,y:242},p2:{x:626,y:283}},{p1:{x:626,y:283},p2:{x:639,y:374}},{p1:{x:639,y:374},p2:{x:627,y:399}},{p1:{x:627,y:399},p2:{x:595,y:420}},{p1:{x:595,y:420},p2:{x:493,y:431}},{p1:{x:493,y:431},p2:{x:443,y:430}},{p1:{x:443,y:430},p2:{x:386,y:424}},{p1:{x:386,y:424},p2:{x:342,y:443}},{p1:{x:342,y:443},p2:{x:337,y:462}},{p1:{x:337,y:462},p2:{x:288,y:504}},{p1:{x:288,y:504},p2:{x:262,y:509}},{p1:{x:262,y:509},p2:{x:211,y:499}},{p1:{x:211,y:499},p2:{x:127,y:498}},{p1:{x:127,y:498},p2:{x:124,y:521}},{p1:{x:124,y:521},p2:{x:130,y:561}},{p1:{x:130,y:561},p2:{x:134,y:619}},{p1:{x:134,y:619},p2:{x:99,y:671}},{p1:{x:99,y:671},p2:{x:122,y:696}},{p1:{x:122,y:696},p2:{x:141,y:718}},{p1:{x:141,y:718},p2:{x:187,y:726}},{p1:{x:187,y:726},p2:{x:224,y:731}},{p1:{x:224,y:731},p2:{x:261,y:720}},{p1:{x:261,y:720},p2:{x:271,y:714}},{p1:{x:271,y:714},p2:{x:279,y:702}},{p1:{x:279,y:702},p2:{x:286,y:673}},{p1:{x:286,y:673},p2:{x:295,y:622}},{p1:{x:295,y:622},p2:{x:303,y:593}},{p1:{x:303,y:593},p2:{x:314,y:584}},{p1:{x:314,y:584},p2:{x:335,y:598}},{p1:{x:335,y:598},p2:{x:340,y:610}},{p1:{x:340,y:610},p2:{x:342,y:636}},{p1:{x:342,y:636},p2:{x:337,y:660}},{p1:{x:337,y:660},p2:{x:330,y:686}},{p1:{x:330,y:686},p2:{x:321,y:747}},{p1:{x:321,y:747},p2:{x:340,y:771}},{p1:{x:340,y:771},p2:{x:394,y:772}},{p1:{x:394,y:772},p2:{x:412,y:757}},{p1:{x:412,y:757},p2:{x:412,y:737}},{p1:{x:412,y:737},p2:{x:412,y:695}},{p1:{x:412,y:695},p2:{x:408,y:650}},{p1:{x:408,y:650},p2:{x:406,y:621}},{p1:{x:406,y:621},p2:{x:422,y:584}},{p1:{x:422,y:584},p2:{x:434,y:571}},{p1:{x:434,y:571},p2:{x:461,y:565}},{p1:{x:461,y:565},p2:{x:489,y:573}},{p1:{x:489,y:573},p2:{x:497,y:615}},{p1:{x:497,y:615},p2:{x:497,y:659}},{p1:{x:497,y:659},p2:{x:490,y:695}},{p1:{x:490,y:695},p2:{x:491,y:741}},{p1:{x:491,y:741},p2:{x:506,y:770}},{p1:{x:506,y:770},p2:{x:570,y:794}},{p1:{x:570,y:794},p2:{x:608,y:779}},{p1:{x:608,y:779},p2:{x:619,y:763}},{p1:{x:619,y:763},p2:{x:623,y:739}},{p1:{x:623,y:739},p2:{x:624,y:707}},{p1:{x:624,y:707},p2:{x:623,y:674}},{p1:{x:623,y:674},p2:{x:624,y:648}},{p1:{x:624,y:648},p2:{x:633,y:631}},{p1:{x:633,y:631},p2:{x:647,y:617}},{p1:{x:647,y:617},p2:{x:666,y:609}},{p1:{x:666,y:609},p2:{x:689,y:592}},{p1:{x:689,y:592},p2:{x:704,y:570}},{p1:{x:704,y:570},p2:{x:714,y:548}},{p1:{x:714,y:548},p2:{x:728,y:524}},{p1:{x:728,y:524},p2:{x:755,y:476}},{p1:{x:755,y:476},p2:{x:768,y:450}},{p1:{x:768,y:450},p2:{x:775,y:404}},{p1:{x:775,y:404},p2:{x:777,y:336}},{p1:{x:777,y:336},p2:{x:777,y:276}},{p1:{x:777,y:276},p2:{x:777,y:245}},{p1:{x:777,y:245},p2:{x:751,y:171}},{p1:{x:751,y:171},p2:{x:738,y:149}},{p1:{x:738,y:149},p2:{x:707,y:120}},{p1:{x:707,y:120},p2:{x:688,y:108}},{p1:{x:688,y:108},p2:{x:647,y:90}},{p1:{x:647,y:90},p2:{x:619,y:74}},{p1:{x:619,y:74},p2:{x:603,y:58}},{p1:{x:603,y:58},p2:{x:568,y:42}},{p1:{x:568,y:42},p2:{x:517,y:38}},{p1:{x:517,y:38},p2:{x:494,y:38}},{p1:{x:494,y:38},p2:{x:419,y:44}},{p1:{x:419,y:44},p2:{x:356,y:44}},{p1:{x:356,y:44},p2:{x:260,y:44}},{p1:{x:260,y:44},p2:{x:214,y:44}},{p1:{x:214,y:44},p2:{x:184,y:44}},{p1:{x:184,y:44},p2:{x:161,y:44}},{p1:{x:161,y:44},p2:{x:134,y:44}},{p1:{x:134,y:44},p2:{x:107,y:47}},{p1:{x:107,y:47},p2:{x:78,y:59}},{p1:{x:78,y:59},p2:{x:72,y:80}},{p1:{x:72,y:80},p2:{x:72,y:109}},{p1:{x:72,y:109},p2:{x:75,y:135}},{p1:{x:75,y:135},p2:{x:120,y:159}},{p1:{x:120,y:159},p2:{x:129,y:160}},{p1:{x:140,y:104},p2:{x:168,y:109}},{p1:{x:168,y:109},p2:{x:228,y:110}},{p1:{x:228,y:110},p2:{x:247,y:116}},{p1:{x:247,y:116},p2:{x:267,y:147}},{p1:{x:267,y:147},p2:{x:265,y:172}},{p1:{x:265,y:172},p2:{x:264,y:202}},{p1:{x:264,y:202},p2:{x:270,y:225}},{p1:{x:270,y:225},p2:{x:282,y:258}},{p1:{x:282,y:258},p2:{x:261,y:282}},{p1:{x:261,y:282},p2:{x:251,y:292}},{p1:{x:251,y:292},p2:{x:237,y:305}},{p1:{x:237,y:305},p2:{x:205,y:311}},{p1:{x:205,y:311},p2:{x:183,y:318}},{p1:{x:183,y:318},p2:{x:163,y:337}},{p1:{x:163,y:337},p2:{x:164,y:362}},{p1:{x:164,y:362},p2:{x:192,y:393}},{p1:{x:192,y:393},p2:{x:213,y:404}},{p1:{x:213,y:404},p2:{x:229,y:405}},{p1:{x:229,y:405},p2:{x:245,y:403}},{p1:{x:245,y:403},p2:{x:270,y:396}},{p1:{x:270,y:396},p2:{x:282,y:384}},{p1:{x:282,y:384},p2:{x:291,y:365}},{p1:{x:291,y:365},p2:{x:295,y:342}},{p1:{x:295,y:342},p2:{x:298,y:320}},{p1:{x:298,y:320},p2:{x:299,y:293}},{p1:{x:299,y:293},p2:{x:302,y:272}},{p1:{x:302,y:272},p2:{x:302,y:250}},{p1:{x:302,y:250},p2:{x:309,y:218}},{p1:{x:309,y:218},p2:{x:314,y:200}},{p1:{x:314,y:200},p2:{x:323,y:179}},{p1:{x:323,y:179},p2:{x:341,y:168}},{p1:{x:341,y:168},p2:{x:364,y:159}},{p1:{x:364,y:159},p2:{x:382,y:157}},{p1:{x:382,y:157},p2:{x:399,y:162}},{p1:{x:399,y:162},p2:{x:432,y:187}},{p1:{x:432,y:187},p2:{x:438,y:200}},{p1:{x:438,y:200},p2:{x:434,y:224}},{p1:{x:434,y:224},p2:{x:427,y:243}},{p1:{x:427,y:243},p2:{x:420,y:282}},{p1:{x:420,y:282},p2:{x:419,y:307}},{p1:{x:419,y:307},p2:{x:423,y:325}},{p1:{x:423,y:325},p2:{x:428,y:334}},{p1:{x:428,y:334},p2:{x:442,y:329}},{p1:{x:442,y:329},p2:{x:450,y:307}},{p1:{x:450,y:307},p2:{x:456,y:282}},{p1:{x:456,y:282},p2:{x:465,y:262}},{p1:{x:465,y:262},p2:{x:477,y:243}},{p1:{x:477,y:243},p2:{x:487,y:229}},{p1:{x:487,y:229},p2:{x:504,y:219}},{p1:{x:504,y:219},p2:{x:531,y:211}},{p1:{x:531,y:211},p2:{x:552,y:208}},{p1:{x:552,y:208},p2:{x:600,y:208}},{p1:{x:600,y:208},p2:{x:616,y:208}},{p1:{x:616,y:208},p2:{x:629,y:222}},{p1:{x:629,y:222},p2:{x:645,y:247}},{p1:{x:645,y:247},p2:{x:652,y:261}},{p1:{x:652,y:261},p2:{x:658,y:276}},{p1:{x:658,y:276},p2:{x:665,y:288}},{p1:{x:665,y:288},p2:{x:670,y:313}},{p1:{x:670,y:313},p2:{x:672,y:351}},{p1:{x:672,y:351},p2:{x:670,y:368}},{p1:{x:670,y:368},p2:{x:662,y:399}},{p1:{x:662,y:399},p2:{x:660,y:412}},{p1:{x:660,y:412},p2:{x:652,y:428}},{p1:{x:652,y:428},p2:{x:641,y:442}},{p1:{x:641,y:442},p2:{x:622,y:455}},{p1:{x:622,y:455},p2:{x:599,y:463}},{p1:{x:599,y:463},p2:{x:570,y:471}},{p1:{x:570,y:471},p2:{x:546,y:473}},{p1:{x:546,y:473},p2:{x:503,y:474}},{p1:{x:503,y:474},p2:{x:460,y:474}},{p1:{x:460,y:474},p2:{x:413,y:472}},{p1:{x:413,y:472},p2:{x:398,y:476}},{p1:{x:398,y:476},p2:{x:350,y:499}},{p1:{x:350,y:499},p2:{x:348,y:508}},{p1:{x:348,y:508},p2:{x:333,y:528}},{p1:{x:333,y:528},p2:{x:314,y:537}},{p1:{x:314,y:537},p2:{x:266,y:539}},{p1:{x:266,y:539},p2:{x:239,y:541}},{p1:{x:239,y:541},p2:{x:211,y:541}},{p1:{x:211,y:541},p2:{x:192,y:536}},{p1:{x:192,y:536},p2:{x:177,y:536}},{p1:{x:177,y:536},p2:{x:174,y:546}},{p1:{x:174,y:546},p2:{x:172,y:560}},{p1:{x:172,y:560},p2:{x:173,y:590}},{p1:{x:173,y:590},p2:{x:176,y:605}},{p1:{x:176,y:605},p2:{x:169,y:637}},{p1:{x:169,y:637},p2:{x:160,y:646}},{p1:{x:160,y:646},p2:{x:162,y:666}},{p1:{x:162,y:666},p2:{x:168,y:671}},{p1:{x:168,y:671},p2:{x:181,y:671}},{p1:{x:181,y:671},p2:{x:192,y:671}},{p1:{x:192,y:671},p2:{x:205,y:669}},{p1:{x:205,y:669},p2:{x:224,y:664}},{p1:{x:224,y:664},p2:{x:236,y:672}},{p1:{x:236,y:672},p2:{x:243,y:660}},{p1:{x:243,y:660},p2:{x:250,y:641}},{p1:{x:250,y:641},p2:{x:245,y:625}},{p1:{x:245,y:625},p2:{x:248,y:605}},{p1:{x:248,y:605},p2:{x:254,y:588}},{p1:{x:254,y:588},p2:{x:258,y:575}},{p1:{x:258,y:575},p2:{x:260,y:569}},{p1:{x:260,y:569},p2:{x:268,y:561}},{p1:{x:268,y:561},p2:{x:280,y:553}},{p1:{x:280,y:553},p2:{x:298,y:545}},{p1:{x:298,y:545},p2:{x:308,y:545}},{p1:{x:308,y:545},p2:{x:326,y:541}},{p1:{x:326,y:541},p2:{x:345,y:541}},{p1:{x:345,y:541},p2:{x:356,y:550}},{p1:{x:356,y:550},p2:{x:358,y:560}},{p1:{x:358,y:560},p2:{x:357,y:573}},{p1:{x:357,y:573},p2:{x:358,y:583}},{p1:{x:358,y:583},p2:{x:362,y:589}},{p1:{x:362,y:589},p2:{x:364,y:595}},{p1:{x:364,y:595},p2:{x:364,y:600}},{p1:{x:364,y:600},p2:{x:365,y:617}},{p1:{x:365,y:617},p2:{x:365,y:620}},{p1:{x:365,y:620},p2:{x:368,y:634}},{p1:{x:368,y:634},p2:{x:369,y:647}},{p1:{x:369,y:647},p2:{x:370,y:657}},{p1:{x:370,y:657},p2:{x:370,y:666}},{p1:{x:370,y:666},p2:{x:370,y:676}},{p1:{x:370,y:676},p2:{x:369,y:685}},{p1:{x:369,y:685},p2:{x:370,y:696}},{p1:{x:370,y:696},p2:{x:375,y:684}},{p1:{x:375,y:684},p2:{x:371,y:667}},{p1:{x:371,y:667},p2:{x:373,y:641}},{p1:{x:373,y:641},p2:{x:370,y:620}},{p1:{x:370,y:620},p2:{x:367,y:603}},{p1:{x:367,y:603},p2:{x:366,y:590}},{p1:{x:366,y:590},p2:{x:371,y:578}},{p1:{x:371,y:578},p2:{x:378,y:564}},{p1:{x:378,y:564},p2:{x:386,y:536}},{p1:{x:386,y:536},p2:{x:391,y:527}},{p1:{x:391,y:527},p2:{x:413,y:514}},{p1:{x:413,y:514},p2:{x:435,y:510}},{p1:{x:435,y:510},p2:{x:466,y:509}},{p1:{x:466,y:509},p2:{x:469,y:510}},{p1:{x:469,y:510},p2:{x:506,y:543}},{p1:{x:506,y:543},p2:{x:510,y:545}},{p1:{x:510,y:545},p2:{x:521,y:547}},{p1:{x:521,y:547},p2:{x:531,y:561}},{p1:{x:531,y:561},p2:{x:538,y:573}},{p1:{x:538,y:573},p2:{x:534,y:591}},{p1:{x:534,y:591},p2:{x:531,y:606}},{p1:{x:531,y:606},p2:{x:526,y:632}},{p1:{x:526,y:632},p2:{x:526,y:647}},{p1:{x:526,y:647},p2:{x:528,y:662}},{p1:{x:528,y:662},p2:{x:533,y:682}},{p1:{x:533,y:682},p2:{x:543,y:712}},{p1:{x:543,y:712},p2:{x:547,y:719}},{p1:{x:547,y:719},p2:{x:568,y:718}},{p1:{x:568,y:718},p2:{x:573,y:694}},{p1:{x:573,y:694},p2:{x:576,y:673}},{p1:{x:576,y:673},p2:{x:588,y:637}},{p1:{x:588,y:637},p2:{x:588,y:616}},{p1:{x:588,y:616},p2:{x:587,y:590}},{p1:{x:587,y:590},p2:{x:610,y:568}},{p1:{x:610,y:568},p2:{x:617,y:566}},{p1:{x:617,y:566},p2:{x:637,y:544}},{p1:{x:637,y:544},p2:{x:649,y:528}},{p1:{x:649,y:528},p2:{x:664,y:499}},{p1:{x:664,y:499},p2:{x:674,y:482}},{p1:{x:674,y:482},p2:{x:695,y:455}},{p1:{x:695,y:455},p2:{x:714,y:411}},{p1:{x:714,y:411},p2:{x:714,y:323}},{p1:{x:714,y:323},p2:{x:714,y:290}},{p1:{x:714,y:290},p2:{x:702,y:237}},{p1:{x:702,y:237},p2:{x:688,y:207}},{p1:{x:688,y:207},p2:{x:666,y:190}},{p1:{x:666,y:190},p2:{x:617,y:148}},{p1:{x:617,y:148},p2:{x:583,y:128}},{p1:{x:583,y:128},p2:{x:554,y:117}},{p1:{x:554,y:117},p2:{x:468,y:99}},{p1:{x:468,y:99},p2:{x:398,y:93}},{p1:{x:398,y:93},p2:{x:338,y:89}},{p1:{x:338,y:89},p2:{x:306,y:88}},{p1:{x:306,y:88},p2:{x:257,y:88}},{p1:{x:257,y:88},p2:{x:237,y:88}},{p1:{x:237,y:88},p2:{x:208,y:88}},{p1:{x:208,y:88},p2:{x:111,y:94}},{p1:{x:111,y:94},p2:{x:133,y:101}},{p1:{x:133,y:101},p2:{x:148,y:103}},{p1:{x:148,y:103},p2:{x:153,y:107}},{p1:{x:369,y:695},p2:{x:362,y:714}},{p1:{x:362,y:714},p2:{x:361,y:735}},{p1:{x:361,y:735},p2:{x:372,y:743}},{p1:{x:372,y:743},p2:{x:380,y:736}},{p1:{x:380,y:736},p2:{x:380,y:729}},{p1:{x:380,y:729},p2:{x:379,y:711}},{p1:{x:379,y:711},p2:{x:370,y:693}}]},V=(x,p)=>x.map((y,t)=>[y,p[t]]),O=.05,P=.98,q=1e4,f=128,F=20,M=.001,k=.7,B=60,v=3,D=100,$=180,H=Math.PI/50,_=70,Y=(x,p)=>{const y=x.sub(p),t=y.abs();return t.getValue()<1?y.mul(y).mul(.5):t.sub(.5)},Z=(x,p,y,t)=>{for(let e=0;e<F;e++){const i=Array.from({length:f}).map(()=>y[Math.floor(Math.random()*y.length)]),n=i.map(h=>x.forward(h.state)).map((h,o)=>h[i[o].action]),a=i.map(h=>p.forward(h.nextState).reduce((o,c)=>o.getValue()>c.getValue()?o:c).mul(P).mul(h.done?0:1).add(h.reward)),d=E(V(n,a).map(([h,o])=>Y(h,o))).div(f);x.zero_grad(),d.backward(),t.step()}},S=x=>M+(k-M)*Math.exp(-1*1.1**x/B),K=(x,p,y)=>{const t=S(y);return Math.random()>t?x.forward(p).reduce((e,i,n,a)=>a[e].getValue()>a[n].getValue()?e:n,0):Math.floor(Math.random()*v)},U=async()=>{const x=document.getElementById("main-canvas"),p=new C(R,_,$,H),y=[p.state().length,5,v],t=new w(y),e=new w(y),i=[],n=new N(t.parameters(),O);for(let a=0;;a++){let d={state:p.reset(),reward:0,done:!1},h=0;for(;!d.done;){const o=K(t,d.state,a),c=p.step(o);i.push({state:d.state,reward:c.reward,action:o,nextState:c.state,done:c.done}),i.length>q&&i.shift(),d=c,h+=c.reward,document.getElementById("status").innerText=`Episode: ${a.toString()}, Score: ${h.toFixed(2)}, EPS: ${S(a).toFixed(2)}, MemSZ: ${i.length}`,p.render(x),await new Promise(requestAnimationFrame)}if(i.length>D&&Z(t,e,i,n),a%10===0){const o=t.parameters();e.parameters().forEach((c,b)=>c.setValue(o[b].getValue()))}}};U();
